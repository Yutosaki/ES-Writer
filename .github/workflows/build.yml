name: build and deploy
run-name: üöÄ „Ç§„É°„Éº„Ç∏„ÇíÁîüÊàê„ÅóEC2„Å´„Éá„Éó„É≠„Ç§ üöÄ
on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: „É™„Éù„Ç∏„Éà„É™„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà
        uses: actions/checkout@v3

      - name: „Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Docker Compose „Éì„É´„Éâ
        working-directory: ./backend
        run: docker-compose build

      - name: „Ç≥„É≥„ÉÜ„Éä„É¨„Ç∏„Çπ„Éà„É™„Å´„É≠„Ç∞„Ç§„É≥
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DockerÁî®„ÅÆ„É°„Çø„Éá„Éº„ÇøÔºà„Çø„Ç∞„ÄÅ„É©„Éô„É´Ôºâ„ÇíÊäΩÂá∫
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Â§âÊï∞„ÅÆÁ¢∫Ë™ç
        run: |
          echo 'Current path:'
          pwd
          echo 'Tag: ${{ steps.meta.outputs.tags }}'
          echo 'Label: ${{ steps.meta.outputs.labels }}'

      - name: Áí∞Â¢ÉÂ§âÊï∞„ÅÆË™≠„ÅøËæº„Åø
        run: |
          echo "COGNITO_REGION=${{ secrets.COGNITO_REGION }}" >> $GITHUB_ENV
          echo "COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}" >> $GITHUB_ENV
          echo "TOKEN_KEY_URL=${{ secrets.TOKEN_KEY_URL }}" >> $GITHUB_ENV
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV

      - name: Docker„Ç§„É°„Éº„Ç∏„Çí„Éì„É´„Éâ„Åó„Å¶„Éó„ÉÉ„Ç∑„É•
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            COGNITO_REGION=${{ secrets.COGNITO_REGION }}
            COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}
            TOKEN_KEY_URL=${{ secrets.TOKEN_KEY_URL }}
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_USER=${{ secrets.DB_USER }}
            DB_HOST=${{ secrets.DB_HOST }}


      # - name: „Éá„Éó„É≠„Ç§Áî®SSH„Ç≠„Éº„ÇíË®≠ÂÆö
      #   uses: webfactory/ssh-agent@v0.5.4
      #   with:
      #     ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # - name: EC2„Å´„Éá„Éó„É≠„Ç§
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
      #       docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      #       docker stop myapp || true
      #       docker rm myapp || true
      #       docker run -d --name myapp -p 80:80 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      #     EOF
